/* CONFIG */

// Colours
$lime: #D4F78B;
$slime: #77DF86;
$lavender: #C9A0EE;
$red: #F46153;
$plum: #840C4A;

// Fonts
$serif: 'Lacrima', 'Times New Roman', serif;
$sans-serif: 'Druk Wide', Helvetica, sans-serif;



/*============================================================================
  Dependency-free breakpoint mixin
    - http://blog.grayghostvisuals.com/sass/sass-media-query-mixin/
==============================================================================*/

// ==================================================
// $Variables
// ==================================================
// Supports 
// @media min-width
// @media max-width
// @media min-width and max-width

$viewport-increment: 0.1px; // customize to suite

// Extra Large Desktop
$xlDesktop: 2000px; // customize to suite
$pre-xlDesktop: $xlDesktop - $viewport-increment;

// Large Desktop
$lgDesktop: 1600px; // customize to suite
$pre-lgDesktop: $lgDesktop - $viewport-increment;

// Medium Desktop
$mdDesktop: 1280px; // customize to suite
$pre-mdDesktop: $mdDesktop - $viewport-increment;

// Small Desktop
$smDesktop: 1024px; // customize to suite
$pre-smDesktop: $smDesktop - $viewport-increment;

// Tablet
$tablet: 768px; // customize to suite
$pre-tablet: $tablet - $viewport-increment;

// Palm
$palm: 640px; // customize to suite
$post-palm: $palm + $viewport-increment;

// iPhone 6/7/8 Plus
$lgiPhone: 414px; // customize to suite
$pre-lgiPhone: $lgiPhone - $viewport-increment;

// iPhone 6
$iphone6: 375px; // customize to suite
$pre-iphone6: $iphone6 - $viewport-increment;

// Constraints
$min: min-width;
$max: max-width;


// ==================================================
// $Media Query @Mixin
// ==================================================

@mixin atMedia($constraint, $viewport1, $viewport2: null) {
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}



/* HERO BACKGROUND ANIMATION  ---------------------------*/
@mixin spin($target, $start, $duration, $delay, $direction) {
	$end: $start + 360deg;

	@keyframes spin-#{$target} {
		0% {
	    	transform: rotate($start);
	    	filter: blur(0);
	  	}
	  	50% {
	  		filter: blur(4px);
	  	}
	  	100% {
	    	transform: rotate($end);
	    	filter: blur(0);
		}
	}

	@if $direction == "reverse" {
		animation: spin-#{$target} $duration infinite reverse $delay;	
	}
	@else {
		animation: spin-#{$target} $duration infinite $delay;
	}
}




/*================ VIEWPORT HEIGHT HELPERS ================*/
@function vh($quantity) {
  @return calc(var(--vh, 1vh) * #{$quantity});
}
@function ih($quantity) {
  @return calc(var(--ih, 1vh) * #{$quantity});
}